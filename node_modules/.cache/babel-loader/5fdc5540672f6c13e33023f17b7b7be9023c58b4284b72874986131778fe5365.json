{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hannah\\\\Desktop\\\\Coding\\\\appointment-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { Header } from \"./components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [appointments, setAppointments] = useState([]);\n  console.log(appointments);\n  const [contacts, setContacts] = useState([]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  // <input\n  //       value={appointments}\n  //       onChange={e => setAppointments(e.target.value)}\n  //     />\n  //     <button onClick={() => {\n  //       setAppointments([\n  //         ...appointments,\n  //         { id: nextId++, name: appointments }\n  //       ]);\n  //     }}>Add</button>\n  //     <ul>\n  //       {appointments.map(appointments=> (\n  //         <li key={appointments.id}>{appointments.name}</li>\n  //       ))}\n  //     </ul>\n\n  const addAppointment = (name, contact, date, time) => {\n    // const newAppointment = { \n    //   name: name,\n    //   date: date,\n    //   time: time,\n    //   contact: contact\n    // }\n\n    setAppointments([...appointments, {\n      name: name,\n      date: date,\n      time: time,\n      contact: contact\n    }]);\n\n    // ( appointments.map((appointments) => \n\n    console.log(\"New Appointment\", name);\n  };\n\n  // const addContact = (title, contact, date, time) => {\n  //   setContacts( contacts.map((contacts) => [...contacts, \n  //     { \n  //       name: title,\n  //       contact: contact,\n  //       date: date,\n  //       time: time\n  //     }]));\n  // };\n\n  const addContact = (name, phone, email) => {\n    const newContact = {\n      name: name,\n      phone: phone,\n      email: email\n    };\n    setContacts([...contacts, newContact]);\n    console.log(\"New Contact\", name);\n  };\n  // addNote(newNote) {\n  //   this.setState({ toDoNotes: [...this.state.toDoNotes, newNote]})\n  // }\n\n  console.log(addAppointment);\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(Header, {\n        className: \"container\",\n        contacts: contacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        className: \"container\",\n        contacts: contacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        className: \"container\",\n        appointments: appointments,\n        addAppointment: addAppointment,\n        contacts: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V/8aJ/fMmpFxY8iVaYqYuGtwrjU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","Header","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","console","log","contacts","setContacts","addAppointment","name","contact","date","time","addContact","phone","email","newContact","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","CONTACTS","className","index","to","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/Hannah/Desktop/Coding/appointment-planner/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport { Header } from \"./components/Header/Header\"\r\n\r\n\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [appointments, setAppointments] = useState([\r\n    \r\n  ]);\r\n\r\n  console.log(appointments);\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  // <input\r\n  //       value={appointments}\r\n  //       onChange={e => setAppointments(e.target.value)}\r\n  //     />\r\n  //     <button onClick={() => {\r\n  //       setAppointments([\r\n  //         ...appointments,\r\n  //         { id: nextId++, name: appointments }\r\n  //       ]);\r\n  //     }}>Add</button>\r\n  //     <ul>\r\n  //       {appointments.map(appointments=> (\r\n  //         <li key={appointments.id}>{appointments.name}</li>\r\n  //       ))}\r\n  //     </ul>\r\n\r\n  const addAppointment = (name, contact, date, time) => {\r\n\r\n    // const newAppointment = { \r\n    //   name: name,\r\n    //   date: date,\r\n    //   time: time,\r\n    //   contact: contact\r\n    // }\r\n\r\n    setAppointments([...appointments, \r\n      { \r\n      name: name,\r\n      date: date,\r\n      time: time,\r\n      contact: contact\r\n    }]);\r\n\r\n    // ( appointments.map((appointments) => \r\n\r\n    console.log(\"New Appointment\", name)\r\n  };\r\n\r\n  // const addContact = (title, contact, date, time) => {\r\n  //   setContacts( contacts.map((contacts) => [...contacts, \r\n  //     { \r\n  //       name: title,\r\n  //       contact: contact,\r\n  //       date: date,\r\n  //       time: time\r\n  //     }]));\r\n  // };\r\n\r\n  const addContact = (name, phone, email) => {\r\n    const newContact =  \r\n      { \r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n      };\r\n\r\n      setContacts([...contacts, newContact]);\r\n\r\n      console.log(\"New Contact\", name)\r\n  };\r\n  // addNote(newNote) {\r\n  //   this.setState({ toDoNotes: [...this.state.toDoNotes, newNote]})\r\n  // }\r\n\r\n\r\nconsole.log(addAppointment)\r\n\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    \r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route path={ROUTES.CONTACTS} element={ <Header className='container' contacts={contacts} addContact={addContact} /> /* Add props to ContactsPage */ }/>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage className='container' contacts={contacts} addContact={addContact} /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage className='container' appointments={appointments}  addAppointment={addAppointment}  contacts={contacts} /> /* Add props to AppointmentsPage */ }/>\r\n\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    \r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}