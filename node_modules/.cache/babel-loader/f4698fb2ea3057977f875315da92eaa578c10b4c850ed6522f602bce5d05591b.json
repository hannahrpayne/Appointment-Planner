{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hannah\\\\Desktop\\\\Coding\\\\appointment-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [appointments, setAppointments] = useState([{\n    name: 'Joe Dirt',\n    contact: '405-232-550',\n    date: '09/14/99',\n    time: '12pm'\n  }]);\n  console.log(appointmentss);\n  const [contacts, setContacts] = useState([]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  // <input\n  //       value={appointments}\n  //       onChange={e => setAppointments(e.target.value)}\n  //     />\n  //     <button onClick={() => {\n  //       setAppointments([\n  //         ...appointments,\n  //         { id: nextId++, name: appointments }\n  //       ]);\n  //     }}>Add</button>\n  //     <ul>\n  //       {appointments.map(appointments=> (\n  //         <li key={appointments.id}>{appointments.name}</li>\n  //       ))}\n  //     </ul>\n\n  const handleAddAppointment = (title, contact, date, time) => {\n    const newAppointment = {\n      title,\n      contact,\n      date,\n      time\n    };\n    setAppointments([...appointments, newAppointment]);\n\n    // ( appointments.map((appointments) => \n\n    console.log(\"New Appointment\", title);\n  };\n\n  // const addContact = (title, contact, date, time) => {\n  //   setContacts( contacts.map((contacts) => [...contacts, \n  //     { \n  //       name: title,\n  //       contact: contact,\n  //       date: date,\n  //       time: time\n  //     }]));\n  // };\n\n  const handleAddContact = (title, contact, date, time) => {\n    const newContact = {\n      title,\n      contact,\n      date,\n      time\n    };\n    setContacts([...contacts, newContact]);\n    console.log(\"New Contact\", title);\n  };\n  // addNote(newNote) {\n  //   this.setState({ toDoNotes: [...this.state.toDoNotes, newNote]})\n  // }\n\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        onAddContact: handleAddContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        appointments: appointments,\n        onAddAppointment: handleAddAppointment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HxrxkQnSLFXMihlZDpctVbTdqgM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","name","contact","date","time","console","log","appointmentss","contacts","setContacts","handleAddAppointment","title","newAppointment","handleAddContact","newContact","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","onAddContact","APPOINTMENTS","onAddAppointment","_c","$RefreshReg$"],"sources":["C:/Users/Hannah/Desktop/Coding/appointment-planner/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\n\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [appointments, setAppointments] = useState([\r\n    { \r\n      name: 'Joe Dirt',\r\n      contact: '405-232-550',\r\n      date: '09/14/99',\r\n      time: '12pm'\r\n    }\r\n  ]);\r\n\r\n  console.log(appointmentss);\r\n  const [contacts, setContacts] = useState([]);\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  // <input\r\n  //       value={appointments}\r\n  //       onChange={e => setAppointments(e.target.value)}\r\n  //     />\r\n  //     <button onClick={() => {\r\n  //       setAppointments([\r\n  //         ...appointments,\r\n  //         { id: nextId++, name: appointments }\r\n  //       ]);\r\n  //     }}>Add</button>\r\n  //     <ul>\r\n  //       {appointments.map(appointments=> (\r\n  //         <li key={appointments.id}>{appointments.name}</li>\r\n  //       ))}\r\n  //     </ul>\r\n\r\n  const handleAddAppointment = (title, contact, date, time) => {\r\n\r\n    const newAppointment = { \r\n      title,\r\n      contact,\r\n      date,\r\n      time\r\n    }\r\n\r\n    setAppointments([...appointments, newAppointment]);\r\n\r\n    // ( appointments.map((appointments) => \r\n\r\n    console.log(\"New Appointment\", title)\r\n  };\r\n\r\n  // const addContact = (title, contact, date, time) => {\r\n  //   setContacts( contacts.map((contacts) => [...contacts, \r\n  //     { \r\n  //       name: title,\r\n  //       contact: contact,\r\n  //       date: date,\r\n  //       time: time\r\n  //     }]));\r\n  // };\r\n\r\n  const handleAddContact = (title, contact, date, time) => {\r\n    const newContact =  \r\n      { \r\n        title,\r\n        contact,\r\n        date,\r\n        time\r\n      };\r\n\r\n      setContacts([...contacts, newContact])\r\n\r\n      console.log(\"New Contact\", title)\r\n  };\r\n  // addNote(newNote) {\r\n  //   this.setState({ toDoNotes: [...this.state.toDoNotes, newNote]})\r\n  // }\r\n\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage  onAddContact={handleAddContact} /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage appointments={appointments}  onAddAppointment={handleAddAppointment} /> /* Add props to AppointmentsPage */ }/>\r\n\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,wBAAwB,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACjH,OAAOC,IAAI,IAAIC,MAAM,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,gDAAgD;AACjF,SAASC,YAAY,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;AACA;AACA;EACE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,CAC/C;IACEiB,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,aAAa;IACtBC,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;EAEFC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C;AACF;AACA;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM0B,oBAAoB,GAAGA,CAACC,KAAK,EAAET,OAAO,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAE3D,MAAMQ,cAAc,GAAG;MACrBD,KAAK;MACLT,OAAO;MACPC,IAAI;MACJC;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEa,cAAc,CAAC,CAAC;;IAElD;;IAEAP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,KAAK,CAAC;EACvC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,gBAAgB,GAAGA,CAACF,KAAK,EAAET,OAAO,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACvD,MAAMU,UAAU,GACd;MACEH,KAAK;MACLT,OAAO;MACPC,IAAI;MACJC;IACF,CAAC;IAEDK,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,UAAU,CAAC,CAAC;IAEtCT,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEK,KAAK,CAAC;EACrC,CAAC;EACD;EACA;EACA;;EAGA,MAAMI,MAAM,GAAG5B,mBAAmB,CAACC,wBAAwB,eACzDQ,OAAA,CAACP,KAAK;IAAC2B,IAAI,EAAC,GAAG;IAACC,OAAO,eAAGrB,OAAA,CAACL,IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;IAAAC,QAAA,gBACjC1B,OAAA,CAACP,KAAK;MAACkC,KAAK;MAACN,OAAO,eAAGrB,OAAA,CAACN,QAAQ;QAACkC,EAAE,EAAEhC,MAAM,CAACiC,QAAS;QAACC,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACnEzB,OAAA,CAACP,KAAK;MAAC2B,IAAI,EAAExB,MAAM,CAACiC,QAAS;MAACR,OAAO,eAAGrB,OAAA,CAACF,YAAY;QAAEiC,YAAY,EAAEd;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAiC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC7HzB,OAAA,CAACP,KAAK;MAAC2B,IAAI,EAAExB,MAAM,CAACoC,YAAa;MAACX,OAAO,eAAGrB,OAAA,CAACH,gBAAgB;QAACM,YAAY,EAAEA,YAAa;QAAE8B,gBAAgB,EAAEnB;MAAqB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAqC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEvK,CACT,CAAC;EAEF,oBACEzB,OAAA,CAACV,cAAc;IAAC6B,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAErC;AAACvB,EAAA,CA5FQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA8FZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}