{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hannah\\\\Desktop\\\\Coding\\\\appointment-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [appointments, setAppointments] = useState([]);\n  const [contacts, setContact] = useState([]);\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  // <input\n  //       value={appointments}\n  //       onChange={e => setAppointments(e.target.value)}\n  //     />\n  //     <button onClick={() => {\n  //       setAppointments([\n  //         ...appointments,\n  //         { id: nextId++, name: appointments }\n  //       ]);\n  //     }}>Add</button>\n  //     <ul>\n  //       {appointments.map(appointments=> (\n  //         <li key={appointments.id}>{appointments.name}</li>\n  //       ))}\n  //     </ul>\n\n  useEffect(() => {\n    setAppointments([...appointments, {\n      name: appointments,\n      contacts: contacts,\n      title: title,\n      contact,\n      date,\n      time\n    }]);\n  });\n  // addNote(newNote) {\n  //   this.setState({ toDoNotes: [...this.state.toDoNotes, newNote]})\n  // }\n\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 47\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 51\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ORn1Leyp0hPtG5BVNQeW94V0tgM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","contacts","setContact","name","title","contact","date","time","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/Hannah/Desktop/Coding/appointment-planner/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\n\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContact] = useState([]);\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  // <input\r\n  //       value={appointments}\r\n  //       onChange={e => setAppointments(e.target.value)}\r\n  //     />\r\n  //     <button onClick={() => {\r\n  //       setAppointments([\r\n  //         ...appointments,\r\n  //         { id: nextId++, name: appointments }\r\n  //       ]);\r\n  //     }}>Add</button>\r\n  //     <ul>\r\n  //       {appointments.map(appointments=> (\r\n  //         <li key={appointments.id}>{appointments.name}</li>\r\n  //       ))}\r\n  //     </ul>\r\n\r\n  useEffect(() => {\r\n    setAppointments([...appointments, \r\n      { \r\n        name: appointments,\r\n        contacts: contacts,\r\n        title: title,\r\n\r\n        contact,\r\n\r\n        date,\r\n\r\n        time,\r\n }]);\r\n  })\r\n  // addNote(newNote) {\r\n  //   this.setState({ toDoNotes: [...this.state.toDoNotes, newNote]})\r\n  // }\r\n\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\r\n      \r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,cAAc,EAAEC,mBAAmB,EAAEC,wBAAwB,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACjH,OAAOC,IAAI,IAAIC,MAAM,QAAQ,wBAAwB;AACrD,SAASC,gBAAgB,QAAQ,gDAAgD;AACjF,SAASC,YAAY,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;AACF;AACA;AACA;EACE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,QAAQ,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC3C;AACF;AACA;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACde,eAAe,CAAC,CAAC,GAAGD,YAAY,EAC9B;MACEI,IAAI,EAAEJ,YAAY;MAClBE,QAAQ,EAAEA,QAAQ;MAClBG,KAAK,EAAEA,KAAK;MAEZC,OAAO;MAEPC,IAAI;MAEJC;IACP,CAAC,CAAC,CAAC;EACF,CAAC,CAAC;EACF;EACA;EACA;;EAGA,MAAMC,MAAM,GAAGrB,mBAAmB,CAACC,wBAAwB,eACzDQ,OAAA,CAACP,KAAK;IAACoB,IAAI,EAAC,GAAG;IAACC,OAAO,eAAGd,OAAA,CAACL,IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;IAAAC,QAAA,gBACjCnB,OAAA,CAACP,KAAK;MAAC2B,KAAK;MAACN,OAAO,eAAGd,OAAA,CAACN,QAAQ;QAAC2B,EAAE,EAAEzB,MAAM,CAAC0B,QAAS;QAACC,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACnElB,OAAA,CAACP,KAAK;MAACoB,IAAI,EAAEjB,MAAM,CAAC0B,QAAS;MAACR,OAAO,eAAGd,OAAA,CAACF,YAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAiC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5FlB,OAAA,CAACP,KAAK;MAACoB,IAAI,EAAEjB,MAAM,CAAC4B,YAAa;MAACV,OAAO,eAAGd,OAAA,CAACH,gBAAgB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,CAAC;IAAqC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAElG,CACT,CAAC;EAEF,oBACElB,OAAA,CAACV,cAAc;IAACsB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAErC;AAAChB,EAAA,CA1DQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}